import { useState } from "react";
import { useAuth } from "@/lib/AuthContext";
import { loginUser, registerUser } from "@/lib/firebase";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useToast } from "@/hooks/use-toast";
import { User, Mail, Phone, Lock, Info, X } from "lucide-react";

interface AuthDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  defaultTab?: "login" | "register";
}

const AuthDialog = ({ open, onOpenChange, defaultTab = "login" }: AuthDialogProps) => {
  const [activeTab, setActiveTab] = useState(defaultTab);
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();
  const { currentUser } = useAuth();

  // Estado para login
  const [loginData, setLoginData] = useState({
    email: "",
    password: ""
  });

  // Estado para registro
  const [registerData, setRegisterData] = useState({
    name: "",
    email: "",
    phone: "",
    password: "",
    confirmPassword: ""
  });

  // Manejo de cambios en los formularios
  const handleLoginChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setLoginData(prev => ({ ...prev, [name]: value }));
  };

  const handleRegisterChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setRegisterData(prev => ({ ...prev, [name]: value }));
  };

  // Manejo de envío de formularios
  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      const { user, error } = await loginUser(loginData.email, loginData.password);
      
      if (error) {
        throw new Error(error);
      }
      
      if (user) {
        toast({
          title: "Inicio de sesión exitoso",
          description: "Has iniciado sesión correctamente",
        });
        onOpenChange(false);
      }
    } catch (error: any) {
      toast({
        title: "Error al iniciar sesión",
        description: error.message,
        variant: "destructive"
      });
    } finally {
      setLoading(false);
    }
  };

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    // Validaciones
    if (registerData.password !== registerData.confirmPassword) {
      toast({
        title: "Error en el registro",
        description: "Las contraseñas no coinciden",
        variant: "destructive"
      });
      setLoading(false);
      return;
    }

    if (registerData.password.length < 6) {
      toast({
        title: "Error en el registro",
        description: "La contraseña debe tener al menos 6 caracteres",
        variant: "destructive"
      });
      setLoading(false);
      return;
    }

    try {
      const userData = {
        name: registerData.name,
        phone: registerData.phone,
      };

      const { user, error } = await registerUser(registerData.email, registerData.password, userData);
      
      if (error) {
        throw new Error(error);
      }
      
      if (user) {
        toast({
          title: "Registro exitoso",
          description: "Tu cuenta ha sido creada correctamente",
        });
        onOpenChange(false);
      }
    } catch (error: any) {
      toast({
        title: "Error en el registro",
        description: error.message,
        variant: "destructive"
      });
    } finally {
      setLoading(false);
    }
  };

  // Si el usuario ya está autenticado, cerrar el diálogo
  if (currentUser && open) {
    onOpenChange(false);
    return null;
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-md md:max-w-[650px] lg:max-w-[850px] xl:max-w-[950px] bg-background/95 backdrop-blur-lg border-primary/20 shadow-2xl p-0 overflow-hidden">
        <div className="absolute right-4 top-4 z-10">
          <Button
            variant="ghost"
            size="icon"
            onClick={() => onOpenChange(false)}
            className="text-white hover:text-primary bg-black/30 hover:bg-black/40 backdrop-blur-md rounded-full h-8 w-8"
          >
            <X className="h-4 w-4" />
            <span className="sr-only">Cerrar</span>
          </Button>
        </div>
        
        <div className="flex flex-col md:flex-row">
          <div className="hidden md:block md:w-[40%] bg-gradient-to-br from-primary/90 via-primary/70 to-primary/50 relative overflow-hidden">
            <div className="absolute inset-0 bg-[url('/fondo2.jpg')] bg-cover bg-center mix-blend-overlay opacity-30"></div>
            <div className="relative p-10 h-full flex flex-col justify-center text-center z-10">
              <img src="/logo.png" alt="NUVÓ Essence" className="h-24 mb-8 mx-auto drop-shadow-lg" />
              <h2 className="text-white font-primary text-3xl lg:text-4xl mb-4 drop-shadow-md">
                {activeTab === "login" ? "Bienvenido de nuevo" : "Únete a la experiencia"}
              </h2>
              <p className="text-white/90 font-secondary text-lg mb-8 drop-shadow">
                {activeTab === "login" 
                  ? "Tu viaje sensorial continúa aquí"
                  : "Descubre el arte de la perfumería personalizada"
                }
              </p>
              <div className="mt-auto">
                <div className="hidden lg:block h-[1px] bg-white/30 w-3/4 mx-auto mb-4"></div>
                <p className="text-white/80 font-secondary text-sm italic">
                  "La perfumería es el arte invisible que habla directamente al alma"
                </p>
              </div>
            </div>
          </div>

          <div className="md:w-[60%] p-8 lg:p-12 bg-gradient-to-b from-background to-background/90">
            <DialogHeader className="mb-6 md:mb-8">
              <DialogTitle className="text-center md:text-left font-primary text-2xl md:text-3xl lg:text-4xl text-primary mb-2 md:mb-4">
                {activeTab === "login" ? "Iniciar Sesión" : "Crear Cuenta"}
              </DialogTitle>
              <DialogDescription className="text-center md:text-left font-secondary text-base md:text-lg text-muted-foreground">
                {activeTab === "login" 
                  ? "Accede a tu cuenta para disfrutar de una experiencia personalizada"
                  : "Únete a NUVÓ para descubrir tu esencia única"
                }
              </DialogDescription>
            </DialogHeader>

            <div className="mb-8 md:mb-10">
              <Tabs 
                defaultValue={defaultTab} 
                value={activeTab} 
                onValueChange={(value) => setActiveTab(value as "login" | "register")}
                className="mt-6"
              >
                <TabsList className="grid grid-cols-2 w-full max-w-sm md:max-w-md lg:max-w-lg mx-auto mb-4 md:mb-6 rounded-xl overflow-hidden border border-primary/20 p-1 shadow-md bg-black/5">
                  <TabsTrigger 
                    value="login" 
                    className="font-secondary text-sm md:text-base lg:text-lg font-medium data-[state=active]:bg-primary/10 data-[state=active]:text-primary data-[state=active]:shadow-md rounded-lg transition-all duration-300 py-3 md:py-4"
                  >
                    Iniciar Sesión
                  </TabsTrigger>
                  <TabsTrigger 
                    value="register" 
                    className="font-secondary text-sm md:text-base lg:text-lg font-medium data-[state=active]:bg-primary/10 data-[state=active]:text-primary data-[state=active]:shadow-md rounded-lg transition-all duration-300 py-3 md:py-4"
                  >
                    Crear Cuenta
                  </TabsTrigger>
                </TabsList>
                
                <TabsContent value="login" className="mt-8 md:mt-10">
                  <form onSubmit={handleLogin} className="max-w-md md:max-w-lg mx-auto px-0">
                    <div className="space-y-6 md:space-y-8">
                      <div className="space-y-3 md:space-y-4">
                        <Label htmlFor="login-email" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                          Email
                        </Label>
                        <div className="relative">
                          <Mail className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                          <Input
                            id="login-email"
                            name="email"
                            type="email"
                            placeholder="tu@email.com"
                            value={loginData.email}
                            onChange={handleLoginChange}
                            className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                            required
                          />
                        </div>
                      </div>
                      
                      <div className="space-y-3 md:space-y-4">
                        <div className="flex justify-between items-center">
                          <Label htmlFor="login-password" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                            Contraseña
                          </Label>
                          <button 
                            type="button" 
                            className="text-sm md:text-base text-primary hover:text-primary/80 font-secondary transition-colors duration-300"
                            onClick={() => toast({
                              title: "Recuperar contraseña",
                              description: "Contacta con atención al cliente para restablecer tu contraseña."
                            })}
                          >
                            ¿Olvidaste tu contraseña?
                          </button>
                        </div>
                        <div className="relative">
                          <Lock className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                          <Input
                            id="login-password"
                            name="password"
                            type="password"
                            placeholder="••••••••"
                            value={loginData.password}
                            onChange={handleLoginChange}
                            className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                            required
                          />
                        </div>
                      </div>

                      <Button 
                        type="submit" 
                        className="w-full font-secondary h-14 md:h-16 mt-8 text-base md:text-lg lg:text-xl transition-all duration-300 shadow-lg hover:shadow-xl bg-primary hover:bg-primary/90 rounded-xl"
                        disabled={loading}
                      >
                        {loading ? "Iniciando sesión..." : "Iniciar Sesión"}
                      </Button>

                      <div className="text-center pt-4 md:pt-6">
                        <button
                          type="button"
                          onClick={() => setActiveTab("register")}
                          className="text-base md:text-lg text-primary hover:underline hover:text-primary/80 font-secondary transition-all duration-300"
                        >
                          ¿No tienes cuenta? Regístrate
                        </button>
                      </div>
                    </div>
                  </form>
                </TabsContent>
                
                <TabsContent value="register" className="mt-8 md:mt-10">
                  <form onSubmit={handleRegister} className="max-w-md md:max-w-lg mx-auto px-0">
                    <div className="space-y-6 md:space-y-8">
                      <div className="space-y-3 md:space-y-4">
                        <Label htmlFor="register-name" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                          Nombre Completo
                        </Label>
                        <div className="relative">
                          <User className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                          <Input
                            id="register-name"
                            name="name"
                            type="text"
                            placeholder="Tu nombre completo"
                            value={registerData.name}
                            onChange={handleRegisterChange}
                            className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                            required
                          />
                        </div>
                      </div>
                      
                      <div className="space-y-3 md:space-y-4">
                        <Label htmlFor="register-email" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                          Email
                        </Label>
                        <div className="relative">
                          <Mail className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                          <Input
                            id="register-email"
                            name="email"
                            type="email"
                            placeholder="tu@email.com"
                            value={registerData.email}
                            onChange={handleRegisterChange}
                            className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                            required
                          />
                        </div>
                      </div>

                      <div className="space-y-3 md:space-y-4">
                        <Label htmlFor="register-phone" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                          Teléfono
                        </Label>
                        <div className="relative">
                          <Phone className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                          <Input
                            id="register-phone"
                            name="phone"
                            type="tel"
                            placeholder="Tu número de teléfono"
                            value={registerData.phone}
                            onChange={handleRegisterChange}
                            className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                            required
                          />
                        </div>
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6 mt-2">
                        <div className="space-y-3 md:space-y-4">
                          <Label htmlFor="register-password" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                            Contraseña
                          </Label>
                          <div className="relative">
                            <Lock className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                            <Input
                              id="register-password"
                              name="password"
                              type="password"
                              placeholder="Mínimo 6 caracteres"
                              value={registerData.password}
                              onChange={handleRegisterChange}
                              className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                              required
                              minLength={6}
                            />
                          </div>
                        </div>
                        
                        <div className="space-y-3 md:space-y-4">
                          <Label htmlFor="register-confirm-password" className="font-secondary text-base md:text-lg lg:text-xl font-medium pl-1">
                            Confirmar
                          </Label>
                          <div className="relative">
                            <Lock className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 md:h-6 md:w-6 text-primary/70" />
                            <Input
                              id="register-confirm-password"
                              name="confirmPassword"
                              type="password"
                              placeholder="Confirmar"
                              value={registerData.confirmPassword}
                              onChange={handleRegisterChange}
                              className="pl-12 md:pl-14 font-secondary bg-background/80 border-primary/30 focus:border-primary/50 h-14 md:h-16 text-base md:text-lg rounded-xl shadow-sm"
                              required
                            />
                          </div>
                        </div>
                      </div>

                      <div className="flex items-start space-x-4 mt-6 mb-4 bg-black/5 p-4 rounded-lg border border-primary/10">
                        <Info className="h-5 w-5 md:h-6 md:w-6 text-primary/70 mt-0.5 flex-shrink-0" />
                        <p className="text-muted-foreground font-secondary text-sm md:text-base">
                          Al registrarte, aceptas nuestros términos y condiciones y nuestra política de privacidad.
                        </p>
                      </div>

                      <Button 
                        type="submit" 
                        className="w-full font-secondary h-14 md:h-16 mt-8 text-base md:text-lg lg:text-xl transition-all duration-300 shadow-lg hover:shadow-xl bg-primary hover:bg-primary/90 rounded-xl"
                        disabled={loading}
                      >
                        {loading ? "Creando cuenta..." : "Crear Cuenta"}
                      </Button>

                      <div className="text-center pt-4 md:pt-6">
                        <button
                          type="button"
                          onClick={() => setActiveTab("login")}
                          className="text-base md:text-lg text-primary hover:underline hover:text-primary/80 font-secondary transition-all duration-300"
                        >
                          ¿Ya tienes cuenta? Inicia sesión
                        </button>
                      </div>
                    </div>
                  </form>
                </TabsContent>
              </Tabs>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default AuthDialog;
